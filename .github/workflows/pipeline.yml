name: ci-pipeline
on:
  push:
    branches: [ main ]
  pull_request:
      branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint  
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=7 --disable=all
  build:
    name: Build image
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.set-output.outputs.updatedTag }}
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag fyp-ci:$(date +%s)
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - name: Automated Version Bump
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.CR_PAT }}
      with:
        major-wording:  'major'
        minor-wording:  'feat,add,added'
        patch-wording:  'patch,fix,update' 
        rc-wording:     'release,alpha'
    - name: Set tag ouput  
      id: set-output 
      env:
        NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
      run: | 
        # echo "the new tag is new tag ${{ steps.version-bump.outputs.newTag }}"
        echo "::set-output name=updatedTag::$NEW_TAG"
    # outputs:
    #   new-tag: ${{ steps.version-bump.outputs.newTags }}
    # - name: Set tag ouput       
    #   run: echo "::set-output name=newTags::${{ steps.version-bump.outputs.newTag }}""
      # env:
      #   NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
      # run: echo "new tag ${{ steps.version-bump.outputs.newTag }}"
    - uses: actions/checkout@v3
    - name: Output step 2 
      env:
        NEW_TAG_ENV: ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.new-tag }}
      run: echo "$NEW_TAG_ENV"
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ steps.version-bump.outputs.newTag }}
        # tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.new-tag }}

        # labels: ${{ steps.meta.outputs.labels }}
  pr:
    name: Pull Request
    runs-on: ubuntu-latest
    needs: push
    steps:
    - name: Create pull request for fyp-cd
      run: |
        echo 'Creating pull request'

