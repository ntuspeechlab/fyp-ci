

name: ci-pipeline
on:
  push:
    branches: [ staging ]
  pull_request:
      branches: [ staging ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    name: Lint
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint  
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=7 --disable=all
  build:
    name: Build image
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      new-tag: ${{ steps.version-bump.outputs.newTag }}
    steps:
    - uses: actions/checkout@v2
    - name: Automated Version Bump
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: ${{ secrets.CR_PAT }}
      with:
        major-wording:  'major'
        minor-wording:  'feat,add,added'
        patch-wording:  'patch,fix,update' 
        rc-wording:     'release,alpha'
    - name: Building docker image  
      id: build-image 
      run: | 
        docker build . --file Dockerfile --tag fyp-ci:${{ steps.version-bump.outputs.newTag }}
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - name: Push Docker Image
      env:
        CONTAINER_IMAGE: fyp-ci:${{ steps.version-bump.outputs.newTag }}
        GH_CONTAINER_IMAGE: ghcr.io/${{github.repository}}:${{ steps.version-bump.outputs.newTag }}
      run: |
        docker tag $CONTAINER_IMAGE $GH_CONTAINER_IMAGE
        docker push $GH_CONTAINER_IMAGE
  pr:
    name: Pull Request
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Clone fyp-cd
      uses: actions/checkout@v3
      with:
        repository: kaikiat/fyp-cd
        token: ${{ secrets.CR_PAT }}
    - name: Echo
      run: |
        echo 'Creating push request'
        echo "Version number: ${{needs.build.outputs.new-tag}}"
    # - uses: actions/checkout@v3
    - name: Creating push request
      run: |
        git config user.name kaikiat
        git config user.email pohkaikiat98@gmail.com
        git add .
        git commit -m "generated"
        git push