name: ci-pipeline
on:
  push:
    branches: [ main ]
  pull_request:
      branches: [ main ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint  
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py') --fail-under=7 --disable=all
  build:
    name: Build
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read-all|write-all
      packages: read-all|write-all
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag fyp-ci:$(date +%s)
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    - name: Automated Version Bump
      id: version-bump
      uses: 'phips28/gh-action-bump-version@master'
      env:
        GITHUB_TOKEN: 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
      with:
        major-wording:  'major'
        minor-wording:  'feat,add,added'
        patch-wording:  'patch,fix,update' 
        rc-wording:     'release,alpha'
    - name: Output Step                             
      env:
        NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
      run: echo "new tag $NEW_TAG"
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.IMAGE_NAME }}:latest, ${{ env.IMAGE_NAME }}:${{ steps.version-bump.outputs.newTag }}

        # labels: ${{ steps.meta.outputs.labels }}
    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v2
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    #     tags: |
    #       type=ref,event=branch
    #       type=ref,event=pr
    #       type=semver,pattern={{version}}
    #       type=semver,pattern={{major}}.{{minor}}
    #       type=sha
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v3
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}
  pr:
    name: Pull Request
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Create pull request for fyp-cd
      run: |
        echo 'Creating pull request'

